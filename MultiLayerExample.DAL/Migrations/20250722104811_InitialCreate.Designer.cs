// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiLayerExample.DAL.Data;

#nullable disable

namespace MultiLayerExample.DAL.Migrations
{
    [DbContext(typeof(ExampleDbContext))]
    [Migration("20250722104811_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MultiLayerExample.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders", "Test");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdUser = 1,
                            TotalAmount = 0m
                        },
                        new
                        {
                            Id = 2,
                            IdUser = 2,
                            TotalAmount = 0m
                        });
                });

            modelBuilder.Entity("MultiLayerExample.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Products", "Test");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 1350m,
                            Title = "Iphone 16 pro"
                        },
                        new
                        {
                            Id = 2,
                            Price = 1000m,
                            Title = "Samsung s25"
                        });
                });

            modelBuilder.Entity("MultiLayerExample.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "Test");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Petrenko Petro"
                        });
                });

            modelBuilder.Entity("OrderProducts", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProducts", "Test");

                    b.HasData(
                        new
                        {
                            OrdersId = 1,
                            ProductsId = 1
                        },
                        new
                        {
                            OrdersId = 1,
                            ProductsId = 2
                        },
                        new
                        {
                            OrdersId = 2,
                            ProductsId = 1
                        },
                        new
                        {
                            OrdersId = 2,
                            ProductsId = 2
                        });
                });

            modelBuilder.Entity("MultiLayerExample.Domain.Entities.Order", b =>
                {
                    b.HasOne("MultiLayerExample.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderProducts", b =>
                {
                    b.HasOne("MultiLayerExample.Domain.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiLayerExample.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MultiLayerExample.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
